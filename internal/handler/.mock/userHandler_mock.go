// Code generated by MockGen. DO NOT EDIT.
// Source: userHandler.go
//
// Generated by this command:
//
//	mockgen -source=userHandler.go -destination=.mock/userHandler_mock.go -package=handler
//
// Package handler is a generated GoMock package.
package handler

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockUserHandler is a mock of UserHandler interface.
type MockUserHandler struct {
	ctrl     *gomock.Controller
	recorder *MockUserHandlerMockRecorder
}

// MockUserHandlerMockRecorder is the mock recorder for MockUserHandler.
type MockUserHandlerMockRecorder struct {
	mock *MockUserHandler
}

// NewMockUserHandler creates a new mock instance.
func NewMockUserHandler(ctrl *gomock.Controller) *MockUserHandler {
	mock := &MockUserHandler{ctrl: ctrl}
	mock.recorder = &MockUserHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserHandler) EXPECT() *MockUserHandlerMockRecorder {
	return m.recorder
}

// GeneratingOTP mocks base method.
func (m *MockUserHandler) GeneratingOTP(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GeneratingOTP", c)
}

// GeneratingOTP indicates an expected call of GeneratingOTP.
func (mr *MockUserHandlerMockRecorder) GeneratingOTP(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GeneratingOTP", reflect.TypeOf((*MockUserHandler)(nil).GeneratingOTP), c)
}

// Signup mocks base method.
func (m *MockUserHandler) Signup(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Signup", c)
}

// Signup indicates an expected call of Signup.
func (mr *MockUserHandlerMockRecorder) Signup(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Signup", reflect.TypeOf((*MockUserHandler)(nil).Signup), c)
}

// VerifyOTP mocks base method.
func (m *MockUserHandler) VerifyOTP(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "VerifyOTP", c)
}

// VerifyOTP indicates an expected call of VerifyOTP.
func (mr *MockUserHandlerMockRecorder) VerifyOTP(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyOTP", reflect.TypeOf((*MockUserHandler)(nil).VerifyOTP), c)
}

// login mocks base method.
func (m *MockUserHandler) login(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "login", c)
}

// login indicates an expected call of login.
func (mr *MockUserHandlerMockRecorder) login(c any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "login", reflect.TypeOf((*MockUserHandler)(nil).login), c)
}
