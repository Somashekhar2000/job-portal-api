// Code generated by MockGen. DO NOT EDIT.
// Source: usersServiceInterface.go
//
// Generated by this command:
//
//	mockgen -source=usersServiceInterface.go -destination=usersServiceInterface_mock.go -package=repository
//
// Package repository is a generated GoMock package.
package repository

import (
	model "project/internal/model"
	reflect "reflect"

	jwt "github.com/golang-jwt/jwt/v5"
	gomock "go.uber.org/mock/gomock"
)

// MockUsersService is a mock of UsersService interface.
type MockUsersService struct {
	ctrl     *gomock.Controller
	recorder *MockUsersServiceMockRecorder
}

// MockUsersServiceMockRecorder is the mock recorder for MockUsersService.
type MockUsersServiceMockRecorder struct {
	mock *MockUsersService
}

// NewMockUsersService creates a new mock instance.
func NewMockUsersService(ctrl *gomock.Controller) *MockUsersService {
	mock := &MockUsersService{ctrl: ctrl}
	mock.recorder = &MockUsersServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsersService) EXPECT() *MockUsersServiceMockRecorder {
	return m.recorder
}

// UserSignup mocks base method.
func (m *MockUsersService) UserSignup(userSignup model.UserSignup) (model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserSignup", userSignup)
	ret0, _ := ret[0].(model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserSignup indicates an expected call of UserSignup.
func (mr *MockUsersServiceMockRecorder) UserSignup(userSignup any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserSignup", reflect.TypeOf((*MockUsersService)(nil).UserSignup), userSignup)
}

// Userlogin mocks base method.
func (m *MockUsersService) Userlogin(userLogin model.UserLogin) (jwt.RegisteredClaims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Userlogin", userLogin)
	ret0, _ := ret[0].(jwt.RegisteredClaims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Userlogin indicates an expected call of Userlogin.
func (mr *MockUsersServiceMockRecorder) Userlogin(userLogin any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Userlogin", reflect.TypeOf((*MockUsersService)(nil).Userlogin), userLogin)
}
